#include <stdio.h>
#include <stdlib.h>
#define SIZE 20

typedef struct Queue{
    int a[SIZE];
    int front;
    int rear;
}Queue;

void init(Queue *q){
    q->front=-1;
    q->rear=-1;
}

int enqueue(Queue *q,int value){
    if(q->rear==SIZE-1) return -1;
    if(q->front==-1) q->front++;
    q->a[++q->rear]=value;
    return 1;
}

int dequeue(Queue *q){
    int value;
    if(q->front==-1 || q->front>q->rear) return -1;
    value=q->a[q->front++];
    if(q->front>q->rear) q->front=q->rear=-1;
    return value;
}

int peek(Queue q){
    if(q.front==-1 || q.front>q.rear) return -1;
    return q.a[q.front];
}

void display(Queue q){
    if(q.front==-1 || q.front>q.rear) return;
    int i;
    for(i=q.front;i<=q.rear;i++) printf("%d\t",q.a[i]);
}

int main()
{
    Queue q;
    init(&q);
    enqueue(&q,10);
    enqueue(&q,20);
    enqueue(&q,30);
    enqueue(&q,40);
    enqueue(&q,50);
    printf("%d\n",dequeue(&q));
    printf("%d\n",peek(q));
    display(q);
    

    return 0;
}

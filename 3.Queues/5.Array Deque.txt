#include <stdio.h>
#include <stdlib.h>
#define SIZE 20

typedef struct Deque{
    int a[SIZE];
    int front;
    int rear;
}Deque;

void init(Deque *q){
    q->front=-1;
    q->rear=-1;
}

int insert_right(Deque *q,int value){
    if(q->rear==q->front-1) return -1;
    if(q->rear==SIZE-1 && q->front==0) return -1;
    if(q->front==-1) q->front=(q->front+1)%SIZE;
    q->rear=(q->rear+1)%SIZE;
    q->a[q->rear]=value;
    return 1;
}

int insert_left(Deque *q,int value){
    if(q->rear==q->front-1) return -1;
    if(q->rear==SIZE-1 && q->front==0) return -1;
    if(q->front==-1) q->front=q->rear=0;
    else if(q->front==0) q->front=SIZE-1;
    else q->front=(q->front-1)%SIZE;
    q->a[q->front]=value;
    return 1;
}

int delete_right(Deque *q){
    if(q->front==-1) return -1;
    int value;
    value=q->a[q->rear];
    if(q->front==q->rear) q->front=q->rear=-1;
    else q->rear=(q->rear-1)%SIZE;
    return value;
}

int delete_left(Deque *q){
    if(q->front==-1) return -1;
    int value;
    value=q->a[q->front];
    if(q->front==q->rear) q->front=q->rear=-1;
    else q->front=(q->front+1)%SIZE;
    return value;
}

int peek_left(Deque q){
    if(q.front==-1) return -1;
    return q.a[q.front];
}

int peek_right(Deque q){
    if(q.front==-1) return -1;
    return q.a[q.rear];
}

void display(Deque q){
    if(q.front==-1) return;
    int i;
    if (q.front<=q.rear && q.rear<SIZE){
        for(i=q.front;i<=q.rear;i++) printf("%d\t",q.a[i]);
    }
    else{
        for(i=q.front;i<SIZE;i++) printf("%d\t",q.a[i]);
        for(i=0;i<=q.rear;i++) printf("%d\t",q.a[i]);
    }
}

int main()
{
    Deque q;
    init(&q);
    insert_left(&q,20);
    insert_left(&q,10);
    insert_left(&q,5);
    delete_left(&q);
    insert_right(&q,30);
    insert_right(&q,40);
    insert_right(&q,50);
    delete_right(&q);
    insert_right(&q,50);
    delete_left(&q);
    insert_left(&q,15);
    display(q);
    

    return 0;
}
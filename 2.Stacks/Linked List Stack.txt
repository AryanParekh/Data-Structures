#include <stdio.h>
#include <stdlib.h>
#define SIZE 20
//structure of Stack
typedef struct Stack{
    int data;
    struct Stack *next;
}Stack;

//to check if stack is empty
int empty(Stack *s){
    return s==NULL;
}

//to push into the stack
int push(Stack **s,int value){
    Stack *newnode=(Stack*)malloc(sizeof(Stack));
    if (newnode==NULL) return -1;
    newnode->data=value;
    newnode->next=*s;
    *s=newnode;
    return 1;
}

//to pop the last inserted value out of stack
int pop(Stack **s){
    if(empty(*s)) return -1;
    Stack *temp=*s;
    *s=(*s)->next;
    int data=temp->data;
    free(temp);
    return data;
}

//to peek the last inserted value in the stack
int peek(Stack *s){
    if(empty(s)) return -1;
    return s->data;
}

//to display the stack
void display(Stack *s){
    while(s!=NULL){
        printf("%d\t",s->data); 
        s=s->next;
    }
}

int main()
{
    Stack *s=NULL;
    push(&s,10);
    push(&s,20);
    push(&s,30);
    push(&s,40);
    push(&s,50);
    printf("%d\n",pop(&s));
    printf("%d\n",peek(s));
    display(s);
    
    return 0;
}

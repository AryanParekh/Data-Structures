#include <stdio.h>
#include <stdlib.h>

typedef struct Node{
    int data;
    struct Node *left;
    struct Node *right;
}Node;

int insert(Node **p,int value){
    Node *newnode=(Node*)malloc(sizeof(Node));
    if(newnode==NULL) return 0;
    newnode->data=value;
    newnode->left=newnode->right=NULL;
    if(*p==NULL) *p=newnode;
    else{
        Node *temp=*p;
        Node *prev=NULL;
        while(temp!=NULL){
            prev=temp;
            if(value<temp->data) temp=temp->left;
            else temp=temp->right;
        }
        if(value<prev->data) prev->left=newnode;
        else prev->right=newnode;
    }
    return 1;
}

int search(Node *p,int value){
    if (p==NULL) return 0;
    Node *temp=p;
    while(temp!=NULL){
        if (value<temp->data) temp=temp->left;
        else if (value>temp->data) temp=temp->right;
        else break;
    }
    if (temp==NULL) return 0;
    return 1;
}

int delete(Node **p,int value){
    if (*p==NULL) return 0;
    Node *temp=*p;
    Node *prev=NULL;
    while(temp!=NULL && temp->data!=value){
        prev=temp;
        if (value<temp->data){
            temp=temp->left;
        }
        else{
            temp=temp->right;
        }
    }
    if (temp==NULL) return 0;
    if(temp->left==NULL && temp->right==NULL){
        if(temp==prev->left) prev->left=NULL;
        else prev->right=NULL;
        free(temp);
    }
    else if(temp->right==NULL){
        if(temp==prev->left) prev->left=temp->left;
        else prev->right=temp->left;
        free(temp);
    }
    else if(temp->left==NULL){
        if(temp==prev->left) prev->left=temp->right;
        else prev->right=temp->right;
        free(temp);
    }
    else{
        Node *succ=temp->left;
        while(succ->right!=NULL) succ=succ->right;
        int v=succ->data;
        delete(p,succ->data);
        temp->data=v;
    }
}

void inorder(Node *p){
    if(p==NULL) return;
    else{
        inorder(p->left);
        printf("%d\t",p->data);
        inorder(p->right);
    }
}

void preorder(Node *p){
    if(p==NULL) return;
    else{
        printf("%d\t",p->data);
        preorder(p->left);
        preorder(p->right);
    }
}

void postorder(Node *p){
    if(p==NULL) return;
    else{
        postorder(p->left);
        postorder(p->right);
        printf("%d\t",p->data);
    }
}

int main()
{
    Node *start=NULL;
    insert(&start,10);
    insert(&start,20);
    insert(&start,6);
    insert(&start,3);
    insert(&start,15);
    insert(&start,17);
    insert(&start,21);
    insert(&start,14);
    insert(&start,22);
    printf("%d\n",search(start,10));
    delete(&start,10);
    printf("%d\n",search(start,10));
    inorder(start);
    
    return 0;
}
